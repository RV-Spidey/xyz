#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node* left;
	struct node* right;
};
struct node *root;
struct node *create()
{
	struct node* newnode;
	int x;
	printf("enter the data or enter -1");
	scanf("%d",&x);
	if(x==-1)
		return NULL;
	newnode=(struct node*)malloc(sizeof(struct node));
	newnode->data=x;
	printf("left child of (%d)--->",x);
	newnode->left=create();
	printf("right child of (%d)--->",x);
	newnode->right=create();
	return newnode;
}
void inorder(struct node *ptr)
{
	if (ptr != NULL)
	{
		inorder(ptr->left);
		printf("%d",ptr->data);
		inorder(ptr->right);
	}
}
void preorder(struct node *ptr)
{
	if (ptr != NULL)
	{
		printf("%d",ptr->data);
		preorder(ptr->left);
		preorder(ptr->right);
	}

}
void postorder(struct node *ptr)
{
	if (ptr != NULL)
	{
		postorder(ptr->left);
		
		postorder(ptr->right);
		printf("%d",ptr->data);
	}
}
int main()
{
	root=create();
	printf("\ninorder:");
	inorder(root);
	printf("\npreorder:");
	preorder(root);
	printf("\npostorder:");
	postorder(root);
}
	
	
